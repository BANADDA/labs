version: '3.8'

services:
  transformerlab:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: transformerlab-dev
    hostname: transformerlab
    
    # Port mappings
    ports:
      - "8000:8000"    # Transformer Lab Web UI
    
    # Environment variables (LinuxServer style)
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - NVIDIA_VISIBLE_DEVICES=all  # For GPU support
    
    # Volume mappings for persistence (LinuxServer style)
    volumes:
      - ./workspace:/home/abc/workspace
      - ./config:/config
      - ./models:/home/abc/.transformerlab/models  # Model storage
    
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8G
        reservations:
          cpus: '2.0'
          memory: 4G
    
    # GPU support (uncomment if you have NVIDIA GPU)
    # runtime: nvidia
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]
    
    # Health checks
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health", "||", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Restart policy
    restart: unless-stopped
    
    # Network
    networks:
      - transformerlab-network

  # Optional: Reverse proxy with SSL termination
  nginx:
    image: nginx:alpine
    container_name: transformerlab-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - transformerlab
    networks:
      - transformerlab-network
    restart: unless-stopped
    profiles:
      - proxy  # Only start with: docker-compose --profile proxy up

networks:
  transformerlab-network:
    driver: bridge
